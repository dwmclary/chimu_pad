<canvas id="graphSpace" width="800" height="300"></canvas>

<script type="text/javascript"> 
    var colors = ["800026","BD0026","E31A1C","FC4E2A","FD8D3C","FEB24C","FED976","FFEDA0","lightyellow","ivory"];

	function graph() {							
		var graphCanvas = document.getElementById('graphSpace');
		// Ensure that the element is available within the DOM
		if (graphCanvas && graphCanvas.getContext) {
			// Open a 2D context within the canvas
			var context = graphCanvas.getContext('2d');

			// Bar chart data
			var data = []
			<% for t in @teams[0..9] %>
			    data.push("<%=t.name%>,<%='%.2f'%(t.current_rating*25)%>")
            <% end %>
			// Draw the bar chart
			drawBarChart(context, data, 50, 50, 25, (graphCanvas.height-10), 25);
		}
	}
	
	// drawBarChart - draws a bar chart with the specified data
	function drawBarChart(context, data, startX, barWidth, spacing, chartHeight, markDataIncrementsIn) {
		// Draw the x and y axes
		context.lineWidth = "1.0";
		var startY = 380;
		drawLine(context, startX, startY, startX, 30); 
		drawLine(context, startX, startY, 570, startY);			
		context.lineWidth = "0.0";
		var maxValue = 0;
		for (var i=0; i<data.length; i++) {
			// Extract the data
			var values = data[i].split(",");
			var name = values[0];
			var height = parseInt(values[1]);
			if (parseInt(height) > parseInt(maxValue)) maxValue = height;
			// Write data to chart
			context.fillStyle = colors[i];
			drawRectangle(context, (startX + (i * barWidth))+spacing + i, (chartHeight - height), barWidth-spacing, height, true);
			// Add the column title to the x-axis
			context.textAlign = "center";
			context.fillStyle = "#000";
			context.fillText(name, startX + (i * barWidth)+spacing+10 + i, chartHeight + 10, 200);				
		}
		// Add some data markers to the y-axis
		var numMarkers = Math.ceil(maxValue / markDataIncrementsIn);
		context.textAlign = "right";
		context.fillStyle = "#000";
		var markerValue = 0;
		for (var i=0; i<numMarkers; i++) {		
			context.fillText(markerValue/25, (startX - 5), (chartHeight - markerValue), 50);
			markerValue += markDataIncrementsIn;
		}
	}		
	
	// drawLine - draws a line on a canvas context from the start point to the end point 
	function drawLine(contextO, startx, starty, endx, endy) {
		contextO.beginPath();
		contextO.moveTo(startx, starty);
		contextO.lineTo(endx, endy);
		contextO.closePath();
		contextO.stroke();
	}
	
	// drawRectanle - draws a rectangle on a canvas context using the dimensions specified
	function drawRectangle(contextO, x, y, w, h, fill) {			
		contextO.beginPath();
		contextO.rect(x, y, w, h);
		contextO.closePath();
		contextO.stroke();
		if (fill) contextO.fill();
	}		
	graph();
</script>